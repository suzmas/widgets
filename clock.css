/* creating clock following this tutorial: https://cssanimation.rocks/clocks/ */

.clocky {
  max-width: 50%;
  max-height: 50%;
}
/* basic clock styling */
.clock {
  border-radius: 50%;
  background: #fff url("ios_clock.svg") no-repeat center;
  background-size: 100%;
  height: 20em;
  padding-bottom: 31%;
  position: relative;
  width: 20em;
}

.clock.simple:after {
  background: #000;
  border-radius: 50%;
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  width: 5%;
  height: 5%;
  z-index: 10;
}
/* Stack the containers */
.minutes-container, .hours-container, .seconds-container {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
/* Hour Hand */
.hours {
  background: #000;
  height: 20%;
  left: 48.75%;
  position: absolute;
  top: 30%;
  transform-origin: 50% 100%; /* Allows hand to be rotated later */
  width: 2.2%;
}
/* Minute Hand */
.minutes {
  background: #000;
  height: 30%;
  left: 49%;
  position: absolute;
  top: 20%;
  transform-origin: 50% 100%;
  width: 1.5%;
}
/* Second Hand */
.seconds {
  background: #000;
  height: 40%;
  left: 49.5%;
  position: absolute;
  top: 19%;
  transform-origin: 50% 70%; /* 80% leaves 20% of hand extending past the center */
  width: .5%;
  z-index: 8;
}

/* ANIMATION */
@keyframes rotate {
  100% {
    transform: rotateZ(360deg); /* tells element to animate around 360 degrees */
  }
}
.hours-container {
  animation: rotate 43200s infinite linear;
}
.minutes-container {
  animation: rotate 3600s infinite steps(60); /* steps makes hand move in 60 steps, thereby looking like a natural clock ticking */
  transition: transform 0.3s cubic-bezier(.4,2.08,.55,.44);
}
.seconds-container {
  animation: rotate 60s infinite steps(60);
  transition: transform 0.3s cubic-bezier(.4,2.08,.55,.44);
}
